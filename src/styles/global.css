@import "tailwindcss";
@plugin "@tailwindcss/typography";

@tailwind utilities;

/* Configure dark mode to use class-based toggling */
@custom-variant dark (&:where(.dark, .dark *));

::selection {
  background-color: oklch(44.2% 0.017 285.786);
  color: #fff;
}

.theme-btn.active {
  background-color: rgb(228 228 231); /* bg-zinc-200 */
  color: rgb(24 24 27); /* text-zinc-900 */
}

html.dark .theme-btn.active {
  background-color: rgb(63 63 70); /* dark:bg-zinc-700 */
  color: rgb(244 244 245); /* dark:text-zinc-100 */
}

/* Animaciones de entrada */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Clases para animaciones */
.animate-fade-in-up {
  animation: fadeInUp 0.5s ease-in-out forwards;
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-in-out forwards;
}

/* Estados iniciales para elementos que se animar√°n */
.fade-in-up {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
}

.fade-in {
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}

/* Estados activos cuando el elemento es visible */
.fade-in-up.visible {
  opacity: 1;
  transform: translateY(0);
}

.fade-in.visible {
  opacity: 1;
}

/* Delays para animaciones escalonadas */
.delay-100 {
  transition-delay: 0.2s;
}

.delay-200 {
  transition-delay: 0.6s;
}

.delay-300 {
  transition-delay: 0.8s;
}

.delay-400 {
  transition-delay: 1s;
}

/* Custom pulse animation */
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

.animate-ping {
  animation: ping 1s cubic-bezier(0,0,.2,1) infinite;
}

/* Smooth transitions for theme changes */
* {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}